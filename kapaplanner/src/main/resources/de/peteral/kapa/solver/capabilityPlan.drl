package de.peteral.kapa.solver
    dialect "java"

import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScoreHolder;

import de.peteral.kapa.domain.Task
import de.peteral.kapa.domain.Team
import de.peteral.kapa.domain.Skill
import java.util.stream.Collectors

global HardSoftScoreHolder scoreHolder;

// Hard constraints

rule "Task must be assigned"
    when
        Task(team == null)
    then
        scoreHolder.addHardConstraintMatch(kcontext, -1);
end

rule "Team must have required skill"
    when
        Task(team != null, team.skills not contains skill)
    then
        scoreHolder.addHardConstraintMatch(kcontext, -1);
end

// Soft constraints

// just messing around - this won't really work
rule "Same work per team with same skill"
    when
        Team($totalWork : getTotalWork(), getTotalWork() > 70)
    then
        scoreHolder.addSoftConstraintMatch(kcontext, - $totalWork);
end